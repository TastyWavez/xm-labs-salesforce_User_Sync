global class xMContactSync {
  
  public void xGetUser(String G_endpoint, String username, String password){
     HttpRequest req = new HttpRequest();
     req.setEndpoint(G_endpoint);
     req.setMethod('GET');
     
     // Specify the required user name and password to access the endpoint
     // As well as the header and header information

  
     Blob headerValue = Blob.valueOf(username + ':' + password);
     String authorizationHeader = 'BASIC ' +
     EncodingUtil.base64Encode(headerValue);
     req.setHeader('Authorization', authorizationHeader);
   
     // Create a new http object to send the request object
     // A response object is generated as a result of the request  
  
     Http http = new Http();
     HTTPResponse res = http.send(req);
     System.debug(res.getBody());
      
//     	if (res.getBody.statusCode == 200 ) {
//           xMContactSync.xCreateUser(Trigger.New[0].Id);
//		}
  }

    @future(callout=true)   
    WebService static void xCreateUser (String endpoint, String username, String password, String payload){
        HttpRequest xMreq = new HttpRequest();
        xMreq.setEndpoint('https://brandonwalton.cs1.xmatters.com/api/xm/1/people');
        xMreq.setMethod('POST');
        
        Blob hValue = Blob.valueOf(username + ':' + password);
        String authHeader = 'BASIC ' +
            EncodingUtil.base64Encode(hValue);
        xMreq.setHeader('Authorization', authHeader);
        
        xMreq.setBody(payload);
        xMreq.setHeader( 'Content-Type', 'application/json' );
        
        Http http = new Http();
        HTTPResponse xMres = http.send(xMreq);
        System.debug(' Response: ' + xMres.getBody());
    }    
}